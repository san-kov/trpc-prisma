// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
model Profile {
  id              String            @id @default(uuid())
  username        String            @unique
  personalBooks   PersonalBook[]
  booksLists      BookList[]
  readingSessions ReadingSession[]
  books           BooksOnProfiles[]
}

model Genre {
  id          String @id @default(uuid())
  title       String @unique
  description String

  Book   Book?   @relation(fields: [bookId], references: [id])
  bookId String?
}

model Author {
  id          String  @id @default(uuid())
  fullName    String
  authorImage String
  years       String
  Book        Book[]
  bio         String?
}

model PersonalBook {
  book        Book      @relation(fields: [bookId], references: [id])
  bookId      String
  Profile     Profile?  @relation(fields: [profileId], references: [id])
  profileId   String
  completed   Boolean   @default(false)
  completedAt DateTime?
  startedAt   DateTime?
  pagesDone   Int       @default(0)

  @@unique([profileId, bookId], name: "personalBookId")
}

model BookList {
  id          String  @id @default(uuid())
  book        Book    @relation(fields: [bookId], references: [id])
  bookId      String
  description String
  cover       String?

  Profile Profile[]
}

model ReadingSession {
  id         String   @id @default(uuid())
  pagesCount Int
  book       Book     @relation(fields: [bookId], references: [id])
  bookId     String
  createdAt  DateTime @default(now())
  Profile    Profile? @relation(fields: [profileId], references: [id])
  profileId  String?
}

model Book {
  id             String            @id @default(uuid())
  title          String            @unique
  genres         Genre[]
  description    String?
  author         Author            @relation(fields: [authorId], references: [id])
  releaseYear    Int
  authorId       String
  adRelease      Boolean           @default(true)
  paperPages     Int
  pages          Int
  PersonalBook   PersonalBook[]
  ReadingSession ReadingSession[]
  BookList       BookList[]
  profiles       BooksOnProfiles[]
}

model BooksOnProfiles {
  book      Book    @relation(fields: [bookId], references: [id])
  profile   Profile @relation(fields: [profileId], references: [id])
  bookId    String
  profileId String

  @@id([bookId, profileId])
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}
